package leetcodeHot100

/*
输入：height = [0,1,0,2,1,0,1,3,2,1,2,1]
输出：6
解释：上面是由数组 [0,1,0,2,1,0,1,3,2,1,2,1] 表示的高度图，在这种情况下，可以接 6 个单位的雨水（蓝色部分表示雨水）。
*/
//这道题其实就是找到左右的最大值，然后依次往中间进行遍历，ans的加是通过两边最大值-遍历节点的值得到的。
func Trap(height []int) int {
	l := 0               // l 是左指针，初始指向数组的起始位置
	r := len(height) - 1 // r 是右指针，初始指向数组的最后一个元素
	lMax := 0            // lMax 记录从左到当前位置的最高柱子高度
	rMax := 0            // rMax 记录从右到当前位置的最高柱子高度
	ans := 0             // ans 用于累计接雨水的总量
	// 当左指针小于右指针时，进行循环
	for l < r {
		lMax = max(lMax, height[l]) // 更新从左到当前位置的最高柱子高度
		rMax = max(rMax, height[r]) // 更新从右到当前位置的最高柱子高度
		// 如果左边的最高柱子比右边的低，那么接雨水的量取决于左边的最高柱子
		if lMax < rMax { //说明需要更新lMax了，所以移动的是l指针
			ans += lMax - height[l] // 累加接雨水的量（左边最高柱子高度减去当前柱子高度）
			l++                     // 左指针向右移动
		} else { // 同理
			ans += rMax - height[r]
			r--
		}
	}
	return ans // 返回累计的接雨水量
}
